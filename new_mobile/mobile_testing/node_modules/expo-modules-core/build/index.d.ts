import { DeviceEventEmitter } from 'react-native';
import { EventEmitter, Subscription } from 'expo-modules-core/build/EventEmitter';
import NativeModulesProxy from 'expo-modules-core/build/NativeModulesProxy';
import { ProxyNativeModule } from 'expo-modules-core/build/NativeModulesProxy.types';
import { requireNativeViewManager } from 'expo-modules-core/build/NativeViewManagerAdapter';
import Platform from 'expo-modules-core/build/Platform';
import SyntheticPlatformEmitter from 'expo-modules-core/build/SyntheticPlatformEmitter';
import { CodedError } from 'expo-modules-core/build/errors/CodedError';
import { UnavailabilityError } from 'expo-modules-core/build/errors/UnavailabilityError';
export { default as deprecate } from 'expo-modules-core/build/deprecate';
export { DeviceEventEmitter, EventEmitter, NativeModulesProxy, ProxyNativeModule, Platform, Subscription, SyntheticPlatformEmitter, requireNativeViewManager, CodedError, UnavailabilityError, };
/**
 * @deprecated renamed to `DeviceEventEmitter`
 */
export declare const RCTDeviceEventEmitter: import("react-native").DeviceEventEmitterStatic;
export * from 'expo-modules-core/build/PermissionsInterface';
export * from 'expo-modules-core/build/PermissionsHook';
